# This file was auto-generated by Fern from our API Definition.

import typing

from humanloop.client import AsyncHumanloop, Humanloop

from .utilities import validate_response


async def test_delete(client: Humanloop, async_client: AsyncHumanloop) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert client.logs.delete(id="string") is None  # type: ignore[func-returns-value]

    assert await async_client.logs.delete(id="string") is None  # type: ignore[func-returns-value]


async def test_get(client: Humanloop, async_client: AsyncHumanloop) -> None:
    expected_response: typing.Any = {
        "id": "id",
        "output_message": {
            "content": "content",
            "name": "name",
            "tool_call_id": "tool_call_id",
            "role": "user",
            "tool_calls": [{"id": "id", "type": "function", "function": {"name": "name"}}],
        },
        "prompt_tokens": 1,
        "output_tokens": 1,
        "prompt_cost": 1.1,
        "output_cost": 1.1,
        "finish_reason": "finish_reason",
        "prompt": {
            "path": "path",
            "id": "id",
            "name": "name",
            "version_id": "version_id",
            "type": "prompt",
            "environments": [{"id": "id", "created_at": "2024-01-15T09:30:00Z", "name": "name", "tag": "default"}],
            "created_at": "2024-01-15T09:30:00Z",
            "updated_at": "2024-01-15T09:30:00Z",
            "created_by": {"id": "id", "email_address": "email_address", "full_name": "full_name"},
            "status": "uncommitted",
            "last_used_at": "2024-01-15T09:30:00Z",
            "model": "model",
            "endpoint": "complete",
            "template": "template",
            "provider": "openai",
            "max_tokens": 1,
            "temperature": 1.1,
            "top_p": 1.1,
            "stop": "stop",
            "presence_penalty": 1.1,
            "frequency_penalty": 1.1,
            "other": {"other": {"key": "value"}},
            "seed": 1,
            "response_format": {"type": "json_object"},
            "tools": [{"name": "name", "description": "description"}],
            "linked_tools": [{"name": "name", "description": "description", "id": "id", "version_id": "version_id"}],
            "commit_message": "commit_message",
            "version_logs_count": 1,
            "total_logs_count": 1,
            "inputs": [{"name": "name"}],
            "evaluator_aggregates": [
                {
                    "value": 1.1,
                    "evaluator_id": "evaluator_id",
                    "evaluator_version_id": "evaluator_version_id",
                    "created_at": "2024-01-15T09:30:00Z",
                    "updated_at": "2024-01-15T09:30:00Z",
                }
            ],
        },
        "messages": [
            {
                "content": "content",
                "name": "name",
                "tool_call_id": "tool_call_id",
                "role": "user",
                "tool_calls": [{"id": "id", "type": "function", "function": {"name": "name"}}],
            }
        ],
        "tool_choice": "none",
        "output": "output",
        "raw_output": "raw_output",
        "created_at": "2024-01-15T09:30:00Z",
        "error": "error",
        "provider_latency": 1.1,
        "provider_request": {"provider_request": {"key": "value"}},
        "provider_response": {"provider_response": {"key": "value"}},
        "session_id": "session_id",
        "parent_id": "parent_id",
        "inputs": {"inputs": {"key": "value"}},
        "source": "source",
        "metadata": {"metadata": {"key": "value"}},
        "save": True,
        "source_datapoint_id": "source_datapoint_id",
        "batches": ["batches"],
        "user": "user",
        "environment": "environment",
    }
    expected_types: typing.Any = {
        "id": None,
        "output_message": {
            "content": None,
            "name": None,
            "tool_call_id": None,
            "role": None,
            "tool_calls": ("list", {0: {"id": None, "type": None, "function": {"name": None}}}),
        },
        "prompt_tokens": "integer",
        "output_tokens": "integer",
        "prompt_cost": None,
        "output_cost": None,
        "finish_reason": None,
        "prompt": {
            "path": None,
            "id": None,
            "name": None,
            "version_id": None,
            "type": None,
            "environments": ("list", {0: {"id": None, "created_at": "datetime", "name": None, "tag": None}}),
            "created_at": "datetime",
            "updated_at": "datetime",
            "created_by": {"id": None, "email_address": None, "full_name": None},
            "status": None,
            "last_used_at": "datetime",
            "model": None,
            "endpoint": None,
            "template": None,
            "provider": None,
            "max_tokens": "integer",
            "temperature": None,
            "top_p": None,
            "stop": None,
            "presence_penalty": None,
            "frequency_penalty": None,
            "other": ("dict", {0: (None, None)}),
            "seed": "integer",
            "response_format": {"type": None},
            "tools": ("list", {0: {"name": None, "description": None}}),
            "linked_tools": ("list", {0: {"name": None, "description": None, "id": None, "version_id": None}}),
            "commit_message": None,
            "version_logs_count": "integer",
            "total_logs_count": "integer",
            "inputs": ("list", {0: {"name": None}}),
            "evaluator_aggregates": (
                "list",
                {
                    0: {
                        "value": None,
                        "evaluator_id": None,
                        "evaluator_version_id": None,
                        "created_at": "datetime",
                        "updated_at": "datetime",
                    }
                },
            ),
        },
        "messages": (
            "list",
            {
                0: {
                    "content": None,
                    "name": None,
                    "tool_call_id": None,
                    "role": None,
                    "tool_calls": ("list", {0: {"id": None, "type": None, "function": {"name": None}}}),
                }
            },
        ),
        "tool_choice": None,
        "output": None,
        "raw_output": None,
        "created_at": "datetime",
        "error": None,
        "provider_latency": None,
        "provider_request": ("dict", {0: (None, None)}),
        "provider_response": ("dict", {0: (None, None)}),
        "session_id": None,
        "parent_id": None,
        "inputs": ("dict", {0: (None, None)}),
        "source": None,
        "metadata": ("dict", {0: (None, None)}),
        "save": None,
        "source_datapoint_id": None,
        "batches": ("list", {0: None}),
        "user": None,
        "environment": None,
    }
    response = client.logs.get(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.logs.get(id="id")
    validate_response(async_response, expected_response, expected_types)
